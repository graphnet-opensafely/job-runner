name: Tests

on: [push]
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PRIVATE_REPO_ACCESS_TOKEN: ${{ secrets.ACTIONS_PRIVATE_REPO_RO_TOKEN }}
jobs:
  test_job:
    runs-on: ubuntu-latest
    name: Run test suite
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.dev.txt
    - name: Run actual tests
      run: python -m pytest

  # A bit of inelegant copy/paste here, just to see if this works
  test_job_windows:
    runs-on: windows-2019
    name: "Run test suite on Windows"
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    # Python 3.7 is what we currently require for running the cohortextractor
    #  locally so we need to make sure we can run with that
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.dev.txt
    - name: Run actual tests
      run: python -m pytest -m "not needs_docker"

  test-package-build:
    runs-on: ubuntu-latest
    name: Test we can build PyPI package
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    # We need to set this to a valid version string in order to keep pip happy,
    # but it doesn't really matter what version we use
    - name: Set version
      run: echo '1.0' > VERSION
    - name: Build package
      run: |
        pip install wheel
        python setup.py sdist bdist_wheel
    - name: Check that wheel installs
      run: |
        python -m venv test-wheel
        test-wheel/bin/pip install dist/*.whl
    - name: Check that sdist installs
      run: |
        python -m venv test-sdist
        test-sdist/bin/pip install dist/*.tar.gz

  test-docker-build:
    runs-on: ubuntu-latest
    name: Test we can build the docker image
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Build image
      run: docker build . --file Dockerfile --build-arg=pythonversion=3.8.3
